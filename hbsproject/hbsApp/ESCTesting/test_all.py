# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestDestinationNegative():
  def setup_method(self, method=None):
    self.driver = webdriver.Firefox(executable_path=r'C:/geckodriver.exe')
    self.vars = {}
  
  def teardown_method(self):
    self.driver.quit()
  
  def test_destinationNegative(self):
    self.driver.get("http://127.0.0.1:8000/user/index")
    self.driver.set_window_size(1434, 732)
    self.driver.execute_script("window.scrollBy(0,{})".format(600))
    time.sleep(3)
    self.driver.find_element(By.NAME, "destination").click()
    self.driver.find_element(By.NAME, "destination").send_keys("123")
    time.sleep(2)
    self.driver.find_element(By.ID, "sub").click()
    self.driver.find_element(By.CSS_SELECTOR, ".warning").click()
    time.sleep(1)
    self.driver.close()

class TestDestinationPositive():
  def setup_method(self, method=None):
    self.driver = webdriver.Firefox(executable_path=r'C:/geckodriver.exe')
    self.vars = {}
  
  def teardown_method(self):
    self.driver.quit()
  
  def test_destinationPositive(self):
    self.driver.get("http://127.0.0.1:8000/user/index")
    self.driver.set_window_size(1434, 632)
    self.driver.execute_script("window.scrollBy(0,{})".format(600))
    time.sleep(3)
    self.driver.find_element(By.NAME, "destination").click()
    self.driver.find_element(By.NAME, "destination").send_keys("London, England, UK (LGW-Gatwick)")
    time.sleep(3)
    self.driver.find_element(By.ID, "sub").click()
    self.driver.find_element(By.CSS_SELECTOR, ".box:nth-child(3) .describe").click()
    self.driver.close()

class TestLoginNegativeInvalidPassword():
  def setup_method(self, method=None):
    self.driver = webdriver.Firefox(executable_path=r'C:/geckodriver.exe')
    self.vars = {}
  
  def teardown_method(self):
    self.driver.quit()
  
  def test_loginNegativeInvalidPassword(self):
    self.driver.get("http://127.0.0.1:8000/user/login")
    self.driver.set_window_size(1434, 632)
    self.driver.find_element(By.ID, "emailadd").click()
    self.driver.find_element(By.ID, "emailadd").send_keys("Junyi_liang@mymail.sutd.edu.sg")
    self.driver.find_element(By.ID, "passwd").click()
    self.driver.find_element(By.ID, "passwd").send_keys("1379707007")
    self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
    self.driver.find_element(By.CSS_SELECTOR, ".text:nth-child(1)").click()
    self.driver.close()
  
class TestLoginPositive():
  def setup_method(self, method = None):
    self.driver = webdriver.Firefox(executable_path=r'C:/geckodriver.exe')
    self.vars = {}
  
  def teardown_method(self):
    self.driver.quit()
  
  def test_loginPositive(self):
    self.driver.get("http://127.0.0.1:8000/user/login")
    self.driver.set_window_size(1434, 632)
    self.driver.find_element(By.ID, "emailadd").click()
    self.driver.find_element(By.ID, "emailadd").send_keys("Junyi_liang@mymail.sutd.edu.sg")
    self.driver.find_element(By.ID, "passwd").click()
    self.driver.find_element(By.ID, "passwd").send_keys("Wy1379707007")
    self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
    self.driver.execute_script("window.scrollBy(0,{})".format(200))
    time.sleep(1)
    self.driver.find_element(By.CSS_SELECTOR, ".tm-main > p").click()
    self.driver.close()


class TestRegisterPositive():
  def setup_method(self, method=None):
    self.driver = webdriver.Firefox(executable_path=r'C:/geckodriver.exe')
    self.vars = {}
  
  def teardown_method(self):
    self.driver.quit()
  
  def test_registerPositive(self):
    self.driver.get("http://127.0.0.1:8000/user/register")
    self.driver.set_window_size(1434, 699)
    self.driver.find_element(By.ID, "email").click()
    self.driver.find_element(By.ID, "email").send_keys("110@gmail.com")
    self.driver.find_element(By.ID, "password").click()
    self.driver.find_element(By.ID, "password").send_keys("123456")
    self.driver.find_element(By.ID, "passwordrepeat").click()
    self.driver.find_element(By.ID, "passwordrepeat").send_keys("123456")
    self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
    self.driver.get("http://127.0.0.1:8000/admin/")
    self.driver.find_element(By.ID, "id_username").click()
    self.driver.find_element(By.ID, "id_username").send_keys("escgroup8")
    self.driver.find_element(By.ID, "id_password").click()
    self.driver.find_element(By.ID, "id_password").send_keys("123456")
    self.driver.find_element(By.CSS_SELECTOR, ".submit-row > input").click()
    self.driver.find_element(By.LINK_TEXT, "Users").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > .field-email").click()
    self.driver.close()

if __name__ == '__main__':
# TestDestinationNegative testing
    test = TestDestinationNegative()
    test.setup_method()
    start = time.time()
    test.test_destinationNegative()
    print('run success time is '+ str(time.time()-start))
    time.sleep(2)
    # 关闭程序
    test.teardown_method()

# TestDestinationPositive testing
    test = TestDestinationPositive()
    test.setup_method()
    start = time.time()
    test.test_destinationPositive()
    print('run success time is '+ str(time.time()-start))
    time.sleep(2)
    # 关闭程序
    test.teardown_method()

# TestLoginNegativeInvalidPassword testing
    test = TestLoginNegativeInvalidPassword()
    test.setup_method()
    start = time.time()
    test.test_loginNegativeInvalidPassword()
    print('run success time is '+ str(time.time()-start))
    time.sleep(2)
    # 关闭程序
    test.teardown_method()

# TestLoginPositive testing
    test = TestLoginPositive()
    test.setup_method()
    start = time.time()
    test.test_loginPositive()
    print('run success time is '+ str(time.time()-start))
    time.sleep(2)
    # 关闭程序
    test.teardown_method()

# TestRegisterPositive testing
    test = TestRegisterPositive()
    test.setup_method()
    start = time.time()
    test.test_registerPositive()
    print('run success time is '+ str(time.time()-start))
    time.sleep(2)
    # 关闭程序
    test.teardown_method()